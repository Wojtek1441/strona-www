<section class="relative h-[400px] bg-slate-200">
    <div
        id="cloud"
        class="bg-white m-auto max-w-64 h-[140px] absolute inset-0 rounded-full text-center text-3xl text-white shadow min-w-[40%]"
    >
        <div
            id="viewport"
            class="h-full overflow-hidden"
        >
            <div
                id="msg-wrapper"
                class="flex transition-all bg-white items-center h-full"
            >
                <div
                    id="msg"
                    class="min-w-full text-black xyz_msg_1"
                >
                    Tekst 1
                </div>
                <div
                    id="msg"
                    class="min-w-full text-black xyz_msg_2"
                >
                    Tekst 2
                </div>
                <div
                    id="msg"
                    class="min-w-full text-black xyz_msg_3"
                >
                    Tekst 3
                </div>
                <div
                    id="msg"
                    class="min-w-full text-black xyz_msg_4"
                >
                    Tekst 4
                </div>
                <div
                    id="msg"
                    class="min-w-full text-black xyz_msg_5"
                >
                    Tekst 5
                </div>
                <div
                    id="msg"
                    class="min-w-full text-black xyz_msg_6"
                >
                    Tekst 6
                </div>
            </div>
        </div>

        <div
            id="circle-wrapper-mob"
            class="lg:hidden flex gap-2"
        >
            <button class="_test-mob bg-black p-0 w-4 h-[6px]"></button>
            <button class="_test-mob bg-black p-0 w-4 h-[6px]"></button>
            <button class="_test-mob bg-black p-0 w-4 h-[6px]"></button>
            <button class="_test-mob bg-black p-0 w-4 h-[6px]"></button>
            <button class="_test-mob bg-black p-0 w-4 h-[6px]"></button>
        </div>
    </div>

    <div
        class="hidden shadow-xl rounded-full circle cursor-pointer lg:flex absolute gap-[30px] w-16 left-[200px] top-[50px] flex-col items-center"
    >
        <img
            src="https://livedemo00.template-help.com/wt_62267_v8/prod-20823-one-service/images/testimonials-02-306x306.png"
            class="img-fluid"
            alt=""
        />
    </div>
    <div
        class="hidden shadow-xl rounded-full cursor-pointer circle lg:flex absolute gap-[30px] w-36 left-[130px] top-[120px] flex-col items-center"
    >
        <img
            src="https://livedemo00.template-help.com/wt_62267_v8/prod-20823-one-service/images/testimonials-02-306x306.png"
            class="img-fluid"
            alt=""
        />
    </div>
    <div
        class="hidden shadow-xl rounded-full cursor-pointer circle lg:flex absolute gap-[30px] w-28 left-[200px] top-[260px] flex-col items-center"
    >
        <img
            src="https://livedemo00.template-help.com/wt_62267_v8/prod-20823-one-service/images/testimonials-02-306x306.png"
            class="img-fluid"
            alt=""
        />
    </div>
    <div
        class="hidden shadow-xl rounded-full cursor-pointer circle lg:flex absolute gap-[30px] w-28 right-[200px] top-[260px] flex-col items-center"
    >
        <img
            src="https://livedemo00.template-help.com/wt_62267_v8/prod-20823-one-service/images/testimonials-02-306x306.png"
            class="img-fluid"
            alt=""
        />
    </div>
    <div
        class="hidden shadow-xl rounded-full cursor-pointer circle lg:flex absolute gap-[30px] w-24 right-[130px] top-[160px] flex-col items-center"
    >
        <img
            src="https://livedemo00.template-help.com/wt_62267_v8/prod-20823-one-service/images/testimonials-02-306x306.png"
            class="img-fluid"
            alt=""
        />
    </div>
    <div
        class="hidden shadow-xl rounded-full cursor-pointer circle lg:flex absolute gap-[30px] w-32 right-[200px] top-[50px] flex-col items-center"
    >
        <img
            src="https://livedemo00.template-help.com/wt_62267_v8/prod-20823-one-service/images/testimonials-02-306x306.png"
            class="img-fluid"
            alt=""
        />
    </div>
</section>

<script>
    const allCircles = document.querySelectorAll('.circle');

    const mobileButtons = document.querySelectorAll('._test-mob');
    const clouldMessage = document.querySelector('#cloud');
    const msgWrapper = document.querySelector('#msg-wrapper');
    let isMobile = window.screen.size > 600;
    let currentIndex = 0;
    const INTERVAL_DELAY = 2000;

    const moveMessage = (index) => {
        const viewportWidth = document.querySelector('#viewport').getBoundingClientRect().width;

        msgWrapper.style.transform = `translateX(-${viewportWidth * index}px)`;
    };

    const getIndex = (index) => {
        const newIndex = index + 1;
        const lengthToCompare = isMobile ? mobileButtons.length : allCircles.length;

        if (newIndex === lengthToCompare) {
            return 0;
        }

        return newIndex;
    };

    const handleInterval = () => {
        currentIndex = getIndex(currentIndex);
        moveMessage(currentIndex);
    };

    let intervalId = setInterval(handleInterval, INTERVAL_DELAY);

    const handleChange = (index) => {
        console.log('index', index);
        currentIndex = index;
        moveMessage(currentIndex);
        clearInterval(intervalId);

        intervalId = setInterval(() => {
            currentIndex = getIndex(currentIndex);
            moveMessage(currentIndex);
        }, INTERVAL_DELAY);
    };

    allCircles.forEach((element, index) => {
        element.addEventListener('click', () => handleChange(index));
    });

    mobileButtons.forEach((button, index) => button.addEventListener('click', () => handleChange(index)));

    const mediaQuery = window.matchMedia('(max-width: 600px)');

    mediaQuery.addEventListener('change', (e) => {
        if (e.matches) {
            currentIndex = 0;
            isMobile = true;
            clearInterval(intervalId);
            mobileButtons.forEach((button) => button.removeEventListener('click', handleChange));
            allCircles.forEach((circle) => circle.removeEventListener('click', handleChange));
            mobileButtons.forEach((button, index) => button.addEventListener('click', () => handleChange(index)));
            intervalId = setInterval(handleInterval, INTERVAL_DELAY);
        } else {
            currentIndex = 0;
            isMobile = false;
            clearInterval(intervalId);
            allCircles.forEach((circle) => circle.removeEventListener('click', handleChange));
            mobileButtons.forEach((button) => button.removeEventListener('click', handleChange));
            allCircles.forEach((circle, index) => circle.addEventListener('click', () => handleChange(index)));
            intervalId = setInterval(handleInterval, INTERVAL_DELAY);
        }
    });
</script>
